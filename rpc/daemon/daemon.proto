syntax = "proto3";
package telepresence.daemon;

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "rpc/common/version.proto";
import "rpc/manager/manager.proto";

option go_package = "github.com/telepresenceio/telepresence/rpc/v2/daemon";

// The Daemon service is responsible for managing network overrides and also
// acts as the central point for logging.
service Daemon {
  // Version returns version information from the Daemon
  rpc Version(google.protobuf.Empty) returns (telepresence.common.VersionInfo);

  // Status returns the current connectivity status
  rpc Status(google.protobuf.Empty) returns (DaemonStatus);

  // Quit quits (terminates) the service.
  rpc Quit(google.protobuf.Empty) returns (google.protobuf.Empty);

  // SetOutboundInfo provides the information needed to set up outbound connectivity
  rpc SetOutboundInfo(OutboundInfo) returns (google.protobuf.Empty);

  // GetClusterSubnets gets the outbound info that has been set on daemon
  rpc GetClusterSubnets(google.protobuf.Empty) returns (ClusterSubnets);

  // SetDnsSearchPath sets a new search path.
  rpc SetDnsSearchPath(Paths) returns (google.protobuf.Empty);

  // SetLogLevel will temporarily set the log-level for the daemon for a duration that is determined b the request.
  rpc SetLogLevel(manager.LogLevelRequest) returns (google.protobuf.Empty);
}

message DaemonStatus {
  reserved 1, 2, 3;
  OutboundInfo outbound_config = 4;
}

message Paths {
  repeated string paths = 1;

  repeated string namespaces = 2;
}

// DNS configuration for the local DNS resolver
message DNSConfig {
  // local_ip is the address of the local DNS server. Only used by Linux systems that have no
  // systemd-resolved configured. Defaults to the first line of /etc/resolv.conf
  bytes local_ip = 1;

  // remote_ip is the address of the kube-dns.kube-system, dns-default.openshift-dns, or similar service,
  bytes remote_ip = 2;

  // Suffixes to exclude
  repeated string exclude_suffixes = 3;

  // Suffixes to include. Has higher prio than the excludes
  repeated string include_suffixes = 4;

  reserved 5;

  // The maximum time wait for a cluster side host lookup.
  google.protobuf.Duration lookup_timeout = 6;
}

// OutboundInfo contains all information that the root daemon needs in order to
// establish outbound traffic to the cluster.
message OutboundInfo {
  reserved 1;

  // session makes it possible for the root daemon to identify itself as the
  // same client as the user daemon.
  manager.SessionInfo session = 2;

  // DNS configuration
  DNSConfig dns = 3;

  // also_proxy are user-added subnets.
  repeated manager.IPNet also_proxy_subnets = 5;

  reserved 4;

  // never_proxy_subnets are subnets that the daemon should not proxy but resolve
  // via the underlying network interface.
  repeated manager.IPNet never_proxy_subnets = 6;
}

// ClusterSubnets are the cluster subnets that the daemon has detected that need to be
// routed
message ClusterSubnets {
  // podSubnets are the subnets that pods go into
  repeated manager.IPNet podSubnets = 1;
  // svcSubnsets are subnets that services go into
  repeated manager.IPNet svcSubnets = 2;
}
